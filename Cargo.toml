[workspace.package]
version = "0.1.0"
edition = "2024"
rust-version = "1.89.0"
description = "0D Master API for vaults"
homepage = "https://pragma.build"
readme = "./README.md"
exclude = [".github/"]
license = "MIT"
repository = "https://github.com/astraly-labs/0d-master-api"

[workspace]
members = [
    # Binaries
    "bin/0d-bin",
    # Crates
    "crates/0d-api",
    "crates/0d-db",
    "crates/0d-indexer",
    "crates/0d-kpi",
    "crates/0d-master",
    "crates/0d-quoting",
]
# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[profile.release]
# debug = 1 means line charts only, which is minimum needed for good stack traces
debug = 1
# Exit process with SIGABRT when any thread panics
panic = 'abort'

[workspace.lints]
rust.missing_debug_implementations = "allow"
rust.unreachable_pub = "warn"
rust.unused_must_use = "deny"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rustdoc.all = "warn"

[workspace.lints.clippy]
# all lints that are on by default (correctness, suspicious, style, complexity, perf)
all = { level = "warn", priority = -1 }

# new lints that are still under development
nursery = { level = "warn", priority = -1 }
# avoid lints that are too pedantic
future_not_send = "allow"
fallible_impl_from = "allow"

# lints which are rather strict or have occasional false positives
pedantic = { level = "warn", priority = -1 }
# avoid lints that are too pedantic
must_use_candidate = "allow"
cast_possible_truncation = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
default_trait_access = "allow"
module_name_repetitions = "allow"
needless_pass_by_value = "allow"
or_fun_call = "allow"
redundant_pub_crate = "allow"
large_stack_arrays = "allow"


[workspace.dependencies]

# Local crates
zerod_api = { path = "crates/0d-api", default-features = false }
zerod_db = { path = "crates/0d-db", default-features = false }
zerod_indexer = { path = "crates/0d-indexer", default-features = false }
zerod_kpi = { path = "crates/0d-kpi", default-features = false }
zerod_master = { path = "crates/0d-master", default-features = false }
zerod_quoting = { path = "crates/0d-quoting", default-features = false }

# Pragma crates
pragma-common = { version = "0.4.1", features = [
    "telemetry",
    "serde",
    "utoipa",
    "services",
] }
evian = { version = "0.3.3", registry = "pragma", features = [
    "pragma_oracle",
    "starknet_erc4626",
    "starknet_erc20",
    "starknet_vault",
] }
pragma-rs = "0.2.9"
jaffar-sdk = { version = "0.1.0", registry = "pragma" }
vesu-sdk = { version = "0.1.0", registry = "pragma" }


async-trait = "0.1"
anyhow = "1"
axum = { version = "0.8", features = ["macros", "ws", "tokio"] }
axum-extra = { version = "0.10.0", features = ["typed-header", "query"] }
axum-tracing-opentelemetry = "0.23.0"
chrono = { version = "0.4.26", features = ["serde"] }
clap = { version = "4.5", features = ["derive", "env"] }
dotenvy = "0.15"
futures = "0.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2"
tokio = { version = "^1.43.0", features = ["full"] }
tokio-util = "0.7.13"
tower-http = { version = "0.5.2", features = ["fs", "trace", "cors"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
uuid = { version = "1.4", features = ["fast-rng", "v4", "serde"] }
url = "2.5"
starknet = "0.17.0"
task-supervisor = { version = "0.3.3", features = ["with_tracing"] }
bigdecimal = { version = "0.4.8", features = ["serde"] }
reqwest = { version = "0.12", default-features = false, features = [
    "json",
    "rustls-tls",
] }
tower_governor = { version = "0.8.0", features = ["axum", "tracing"] }
rust_decimal = { version = "1.35", features = [
    "db-diesel-postgres",
    "serde",
    "maths",
    "macros",
] }
moka = { version = "0.12", features = ["future"] }
dashmap = "6.1.0"


# OpenAPI
utoipa = { version = "5", features = ["axum_extras", "chrono", "uuid"] }
utoipauto = "0.1.14"
utoipa-swagger-ui = { version = "9", features = ["axum"] }

# Database ORM
diesel = { version = "2.1", features = [
    "postgres",
    "extras",
    "postgres_backend",
    "numeric",
    "chrono",
] }
diesel-async = { version = "0.4.1", features = ["postgres"] }
diesel_migrations = "2"
deadpool-diesel = { version = "0.4", features = ["postgres"] }
