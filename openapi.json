{
  "openapi": "3.1.0",
  "info": {
    "title": "pragma-api",
    "description": "0D Master API for vaults",
    "license": {
      "name": "MIT",
      "identifier": "MIT"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://{environment}.0d.finance/api/v1",
      "variables": {
        "environment": {
          "default": "devnet",
          "enum": [
            "devnet",
            "production"
          ]
        }
      }
    }
  ],
  "paths": {
    "/users/{address}": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "get_user_profile",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "User wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{address}/vaults/{vault_id}/kpis": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "get_user_kpis",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "User wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vault_id",
            "in": "path",
            "description": "Vault identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User performance KPIs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserKpi"
                }
              }
            }
          },
          "404": {
            "description": "User KPIs not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{address}/vaults/{vault_id}/summary": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "get_user_position_summary",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "User wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vault_id",
            "in": "path",
            "description": "Vault identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User position summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPositionSummary"
                }
              }
            }
          },
          "404": {
            "description": "User position not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{address}/vaults/{vault_id}/transactions": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "get_user_transaction_history",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "User wallet address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vault_id",
            "in": "path",
            "description": "Vault identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Transaction type filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of transactions to return (1-200, default: 50)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User transaction history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTransactionHistory"
                }
              }
            }
          },
          "404": {
            "description": "User or vault not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/vaults": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "list_vaults",
        "responses": {
          "200": {
            "description": "Vault list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/vaults/{vault_id}": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "get_vault",
        "parameters": [
          {
            "name": "vault_id",
            "in": "path",
            "description": "Vault identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vault metadata with live values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vault"
                }
              }
            }
          },
          "404": {
            "description": "Vault not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/vaults/{vault_id}/stats": {
      "get": {
        "tags": [
          "Vaults"
        ],
        "operationId": "get_vault_stats",
        "parameters": [
          {
            "name": "vault_id",
            "in": "path",
            "description": "Vault identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vault statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VaultStats"
                }
              }
            }
          },
          "404": {
            "description": "Vault not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contract": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "DepositConstraints": {
        "type": "object",
        "properties": {
          "max_deposit": {
            "type": [
              "string",
              "null"
            ]
          },
          "min_deposit": {
            "type": [
              "string",
              "null"
            ]
          },
          "paused": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "DisplayCurrency": {
        "type": "string",
        "enum": [
          "usd",
          "usdc"
        ]
      },
      "Icons": {
        "type": "object",
        "properties": {
          "dark": {
            "type": [
              "string",
              "null"
            ]
          },
          "light": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "ResponseStatus": {
        "type": "string",
        "enum": [
          "ok",
          "error"
        ]
      },
      "TransactionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "failed",
          "cancelled"
        ]
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "deposit",
          "withdraw",
          "transfer",
          "claim"
        ]
      },
      "UserKpi": {
        "type": "object",
        "required": [
          "as_of",
          "all_time_pnl_usd",
          "unrealized_pnl_usd",
          "realized_pnl_usd",
          "max_drawdown_pct",
          "sharpe",
          "sortino"
        ],
        "properties": {
          "all_time_pnl_usd": {
            "type": "string"
          },
          "as_of": {
            "type": "string",
            "format": "date-time"
          },
          "max_drawdown_pct": {
            "type": "number",
            "format": "double"
          },
          "realized_pnl_usd": {
            "type": "string"
          },
          "sharpe": {
            "type": "number",
            "format": "double"
          },
          "sortino": {
            "type": "number",
            "format": "double"
          },
          "unrealized_pnl_usd": {
            "type": "string"
          }
        }
      },
      "UserPositionSummary": {
        "type": "object",
        "required": [
          "vault_id",
          "as_of",
          "position_value_usd",
          "share_balance",
          "share_price",
          "total_deposits",
          "all_time_earned"
        ],
        "properties": {
          "all_time_earned": {
            "type": "string"
          },
          "as_of": {
            "type": "string",
            "format": "date-time"
          },
          "first_deposit_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "position_value_usd": {
            "type": "string"
          },
          "share_balance": {
            "type": "string"
          },
          "share_price": {
            "type": "string"
          },
          "total_deposits": {
            "type": "string"
          },
          "vault_id": {
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "required": [
          "address",
          "chain",
          "display_currency"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "display_currency": {
            "$ref": "#/components/schemas/DisplayCurrency"
          }
        }
      },
      "UserTransaction": {
        "type": "object",
        "required": [
          "id",
          "vault_id",
          "type",
          "status",
          "amount",
          "tx_hash",
          "timestamp"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TransactionStatus"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "tx_hash": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TransactionType"
          },
          "vault_id": {
            "type": "string"
          }
        }
      },
      "UserTransactionHistory": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTransaction"
            }
          },
          "next_cursor": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Vault": {
        "type": "object",
        "required": [
          "id",
          "name",
          "chain",
          "symbol",
          "base_asset",
          "status",
          "tvl",
          "share_price",
          "perf_fee_bps",
          "contract",
          "deposit_constraints",
          "withdraw_constraints",
          "icons",
          "api_endpoint"
        ],
        "properties": {
          "api_endpoint": {
            "type": "string"
          },
          "base_asset": {
            "type": "string"
          },
          "chain": {
            "type": "string"
          },
          "chain_id": {
            "type": [
              "string",
              "null"
            ]
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "deposit_constraints": {
            "$ref": "#/components/schemas/DepositConstraints"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "docs_url": {
            "type": [
              "string",
              "null"
            ]
          },
          "icons": {
            "$ref": "#/components/schemas/Icons"
          },
          "id": {
            "type": "string"
          },
          "inception_date": {
            "type": [
              "string",
              "null"
            ]
          },
          "mgmt_fee_bps": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "perf_fee_bps": {
            "type": "integer",
            "format": "int32"
          },
          "share_price": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "strategy_brief": {
            "type": [
              "string",
              "null"
            ]
          },
          "symbol": {
            "type": "string"
          },
          "tvl": {
            "type": "string"
          },
          "withdraw_constraints": {
            "$ref": "#/components/schemas/WithdrawConstraints"
          }
        }
      },
      "VaultListItem": {
        "type": "object",
        "required": [
          "id",
          "name",
          "chain",
          "symbol",
          "tvl",
          "status"
        ],
        "properties": {
          "chain": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "tvl": {
            "type": "string"
          }
        }
      },
      "VaultListResponse": {
        "type": "object",
        "required": [
          "items"
        ],
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaultListItem"
            }
          }
        }
      },
      "VaultPortfolioDTO": {
        "type": "object",
        "description": "Vault portfolio snapshot as returned by an individual vault API\nExample corresponds to Carry Trade vault.",
        "required": [
          "age_days",
          "last_30d_apr",
          "num_depositors",
          "profit_factor",
          "tvl_in_usd",
          "total_exposure_in_usd",
          "total_pnl",
          "free_collateral",
          "balances"
        ],
        "properties": {
          "age_days": {
            "type": "string"
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "propertyNames": {
                "type": "string"
              }
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "free_collateral": {
            "type": "string"
          },
          "last_30d_apr": {
            "type": "string"
          },
          "num_depositors": {
            "type": "string"
          },
          "profit_factor": {
            "type": "string"
          },
          "total_exposure_in_usd": {
            "type": "string"
          },
          "total_pnl": {
            "type": "string"
          },
          "tvl_in_usd": {
            "type": "string"
          }
        }
      },
      "VaultStats": {
        "type": "object",
        "required": [
          "tvl",
          "past_month_apr_pct"
        ],
        "properties": {
          "past_month_apr_pct": {
            "type": "number",
            "format": "double"
          },
          "tvl": {
            "type": "string"
          }
        }
      },
      "WithdrawConstraints": {
        "type": "object",
        "properties": {
          "instant_liquidity": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "instant_slippage_max_bps": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "redeem_24h_threshold_pct_of_aum": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "redeem_48h_above_threshold": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "pragma-bin",
      "description": "0d, master api"
    },
    {
      "name": "User",
      "description": "User profile endpoints"
    },
    {
      "name": "Vaults",
      "description": "Vault management endpoints"
    }
  ]
}